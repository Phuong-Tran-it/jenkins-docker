pipeline {
    agent any
    environment {
        DOCKERHUB_USER = credentials('phuongtn20-docker').username
        DOCKERHUB_PASSWORD = credentials('phuongtn20-docker').password
        DOCKER_REPO = 'phuongtn20'
    }
    stages {
        stage('Get Latest Image Tags') {
            steps {
                script {
                    // Get the latest commit hash tag for the backend image
                    env.BACKEND_COMMIT_HASH = sh(
                        script: "curl -s -u $DOCKERHUB_USER:$DOCKERHUB_PASSWORD " +
                                "'https://hub.docker.com/v2/repositories/${DOCKER_REPO}/backend-app/tags?page_size=1' | " +
                                "jq -r '.results[0].name'",
                        returnStdout: true
                    ).trim()

                    // Get the latest commit hash tag for the frontend image
                    env.FRONTEND_COMMIT_HASH = sh(
                        script: "curl -s -u $DOCKERHUB_USER:$DOCKERHUB_PASSWORD " +
                                "'https://hub.docker.com/v2/repositories/${DOCKER_REPO}/frontend-app/tags?page_size=1' | " +
                                "jq -r '.results[0].name'",
                        returnStdout: true
                    ).trim()

                    echo "Latest backend image tag: ${env.BACKEND_COMMIT_HASH}"
                    echo "Latest frontend image tag: ${env.FRONTEND_COMMIT_HASH}"
                }
            }
        }

        stage('Deploy Stack') {
            steps {
                script {
                    // Deploy using docker-compose with the specified commit hashes
                    sh "BACKEND_COMMIT_HASH=${env.BACKEND_COMMIT_HASH} FRONTEND_COMMIT_HASH=${env.FRONTEND_COMMIT_HASH} docker-compose up -d"
                }
            }
        }
    }
    post {
        success {
            echo 'App stack deployed successfully.'
        }
        failure {
            echo 'Deployment failed.'
        }
    }
}
